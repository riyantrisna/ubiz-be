// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"collapp/configs"
	"collapp/infras"
	handler3 "collapp/module/lang/handler"
	repository3 "collapp/module/lang/repository"
	service3 "collapp/module/lang/service"
	"collapp/module/translation/handler"
	"collapp/module/translation/repository"
	"collapp/module/translation/service"
	handler2 "collapp/module/user/handler"
	repository2 "collapp/module/user/repository"
	service2 "collapp/module/user/service"
	"collapp/transport/http"
	"collapp/transport/http/middleware"
	"collapp/transport/http/router"
	"github.com/google/wire"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func InitializeEvent() *http.HTTP {
	configsConfig := configs.Get()
	db := infras.NewMysqlDB(configsConfig)
	translationRepository := repository.NewTranslationRepository(db)
	translationService := service.NewTranslationService(db, translationRepository)
	translationHandler := handler.NewTranslationHandler(db, configsConfig, translationService)
	userRepository := repository2.NewUserRepository(db)
	userService := service2.NewUserService(db, userRepository)
	userHandler := handler2.NewUserHandler(db, configsConfig, userService, translationService)
	langRepository := repository3.NewLangRepository(db)
	langService := service3.NewLangService(db, langRepository)
	langHandler := handler3.NewLangHandler(db, configsConfig, langService, translationService)
	moduleHandlers := router.ModuleHandlers{
		TranslationHandler: translationHandler,
		UserHandler:        userHandler,
		LangHandler:        langHandler,
	}
	routerRouter := router.NewRouter(moduleHandlers)
	middlewareAuthMiddleware := middleware.NewAuthMiddleware(configsConfig, translationService, userService)
	httpHTTP := http.NewHTTP(configsConfig, routerRouter, middlewareAuthMiddleware)
	return httpHTTP
}

// wire.go:

// Wiring for configurations.
var configurations = wire.NewSet(configs.Get)

// Wiring for database.
var database = wire.NewSet(infras.NewMysqlDB)

var translationModule = wire.NewSet(repository.NewTranslationRepository, service.NewTranslationService)

var userModule = wire.NewSet(repository2.NewUserRepository, service2.NewUserService)

var langModule = wire.NewSet(repository3.NewLangRepository, service3.NewLangService)

var modules = wire.NewSet(
	translationModule,
	userModule,
	langModule,
)

var authMiddleware = wire.NewSet(middleware.NewAuthMiddleware)

// Wiring for HTTP routing.
var routing = wire.NewSet(handler.NewTranslationHandler, handler2.NewUserHandler, handler3.NewLangHandler, wire.Struct(new(router.ModuleHandlers), "TranslationHandler", "UserHandler", "LangHandler"), router.NewRouter)

var httpServer = wire.NewSet(http.NewHTTP)
